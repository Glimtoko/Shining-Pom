# PROBLEM DESCRIPTION
pom.problem = 4
pom.max_step  = 1000000
pom.end_time = 0.2
pom.cfl = 0.7     
pom.do_reflux = 0
pom.limiter = 2

# Mesh file not used. See embedded mesh below
#mesh.file = /home/nick/programming/git/Shining-Pom/examples/sod.json


# VERBOSITY
amr.v              = 0       # verbosity in Amr. 1 -> Include FINE step prints


# REFINEMENT
amr.max_level       = 2       # maximum level number allowed
amr.ref_ratio       = 2 2 2 2 # refinement ratio
amr.blocking_factor = 1       # block factor in grid generation
amr.max_grid_size   = 100
amr.regrid_int      = 1       # how often to regrid


# REFINEMENT CRITERIA
amr.e_refine = 1.0 2.2 2.3 3.5
amr.u_refine = 0.1 0.15 0.2 3.5
amr.r_refine = 0.3 0.5 0.8 0.9


# PLOTFILES
output.subdir = output
output.plot_file  = plot    # root name of plot file
output.plot_int   = 20000   # number of timesteps between plot files


# CHECKPOINT
output.chk_file = chk      # root name of checkpoint file
output.chk_int  = 0        # number of timesteps between checkpoint files
#output.restart  = chk00060 # restart from this checkpoint file

# Mesh. Note all strings *must* be in single quotes
mesh.embed = "
{
    'boundaries': {
        'X' : {
            'E' : ['reflect_even', 'reflect_even', 'reflect_even', 'reflect_even'],
            'RHO' : ['reflect_even', 'reflect_even', 'reflect_even', 'reflect_even'],
            'MOMU' : ['reflect_odd', 'reflect_odd', 'reflect_odd', 'reflect_odd'],
            'MOMV' : ['reflect_even', 'reflect_even', 'reflect_even', 'reflect_even'],
            'DT' : ['reflect_even', 'reflect_even', 'reflect_even', 'reflect_even']
        },

        'Y' : {
            'E' : ['reflect_even', 'reflect_even', 'reflect_even', 'reflect_even'],
            'RHO' : ['reflect_even', 'reflect_even', 'reflect_even', 'reflect_even'],
            'MOMU' : ['reflect_even', 'reflect_even', 'reflect_even', 'reflect_even'],
            'MOMV' : ['reflect_even', 'reflect_even', 'reflect_even', 'reflect_even'],
            'DT' : ['reflect_even', 'reflect_even', 'reflect_even', 'reflect_even']
        }
    },

    'mesh': {
        'materials': {
            'right': [0.125, 0.1],
            'background': [1.0, 1.0]
        },
        'domain': {
            'BL': [0.0, 0.0],
            'TR': [1.0, 1.0]
        },
        'cells': [50, 50],
        'entities':[
            ['BOX', 0.5, -1.0, 1.1, 2.0, 'right']
        ]
    }
}
"
